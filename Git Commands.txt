git init creates a new Git repository
git status inspects the contents of the working directory and staging area
git add adds files from the working directory to the staging area
git diff shows the difference between the working directory and the staging area
git commit permanently stores file changes from the staging area in the repository
git log shows a list of all previous commits

git init

Working Directory
Make changes to files:
- Additions
- Deletions
- Modifications

git add "filename"

Staging Area
- Files are ready for commit
Multiple Commits
git add filename1 filename2

git commit

Repository
- Changes are saved to repository as a commit
One more bit of code is needed for a commit: the option -m followed by a message. Here's an example: git commit -m "Complete first line of dialogue"

git status

- Check the status

git log

Often with Git, you'll need to refer back to an earlier version of a project. Commits are stored chronologically in the repository and can be viewed with:

git show HEAD

In Git, the commit you are currently on is known as the HEAD commit. In many cases, the most recently made commit is the HEAD commit.
To see the HEAD commit, enter:
The output of this command will display everything the git log command displays for the HEAD commit, plus all the file changes that were committed.

git checkout

What if you decide to change the ghost's line in the working directory, but then decide you wanted to discard that change?
You could rewrite the line how it was originally, but what if you forgot the exact wording? The command
git checkout HEAD filename
will restore the file in your working directory to look exactly as it did when you last made a commit.
Here, filename again is the actual name of the file. If the file is named changes.txt, the command would be
git checkout HEAD changes.txt

git reset

Git enables you to rewind to the part before you made the wrong turn. You can do this with:
git reset commit_SHA
This command works by using the first 7 characters of the SHA of a previous commit. For example, if the SHA of the previous commit is 5d692065cf51a2f50ea8e7b19b5a7ae512f633ba, use:
git reset 5d69206
